para crear migraciones  hay que usear el orm 

1_   php artisan migrate  // ejecuta  y crea todas las tablas con sus columnasd despues de ejecutrar up  da error si esta mal configurado
2_ php artisan make:migration cursos  pero mejor hacer  php artisan make:migration create_curso_table  esto para crear migraciones para luego migrar cuando ejecute (1)    

ADEMAS :  php artisan migrate:rollback  // para volver hacia atras
ADEMASL  php artisan migrate:fresh  // elimina todo y crea  todo, WARNING! es un destructive method
ADEMAS : php artisan migrate:reset //elimina todo !!

MODELOS 
crea al ejecutar :   php artisan make:model Curso (singular despues lo pasara a plural solo) en  ./app/models/.. el model 
*_ php artisan thinker   // mete la consola de otro color weird...
*_ una vez que se abre la consola de tinker : 
  use App\Models\Curso;
  $curso = new curso();
  $curso->name="whatever";
  $curso->description="bla bla";
  $curso->save();

                SEEDERS  VIDEO 11  

  php artisan db:seed //llena de registros solocitados de lo que escribimos en seeders  lee solo el DatabaseSeeder.php
  php artisan make:seeder CursoSeeder  // crea seeders para cada tabla especifica que usaremos. en este caso el Curso agregar :  $this->call(CursoSeeder::class); en databvaseseeder.php


                FACTORIES VIDEO 12  ./database/factories

php artisan make:factory Cursos

                VIDEO 15  generador de consultas de Eloquent
 Recuperar para consultar: > 
 *_use App\Models\Curso
 *_ $cursos=curso::all(); recupero toooodo !! 

> $cursos= curso::where('category','web design')->orderby('id','desc')->get();  // recupero filtrado y ordenado
> $cursos= curso::where('category','web design')->orderby('name','asc')->get();
> $cursos= curso::where('category','web design')->orderby('name','asc')->get()->first();  // el primero solamente
> $cursos=curso::select('name','description')->orderby('name','asc')->where('category','web design')->get();
> $cursos=curso::select('name as title','description')->orderby('name','asc')->where('category','web design')->get();
> $cursos=curso::select('name as title','description')->orderby('name','asc')->where('category','web design')->take(5)->get(); //toma solo 5
> $cursos=curso::where('id',5)->first(); // notese que aca solo devuelve  un objeto y sin el first devuelve un array por lo tanto aca podemos $cursos->name  no asi con el array
> $cursos=curso::find(5); //  forma facil de arriba que nos provee laravel ya que lo hacemos siempre
> $cursos= curso::where('id','>',45)->get();





